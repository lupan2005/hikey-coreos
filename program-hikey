#! /bin/bash

device="/dev/ttyUSB2"

builds_root="/home/${USER}/projects/96boards"

uefi_path="${builds_root}/builds.96boards.org/releases/hikey/linaro/binaries/15.11"
debian_path="${builds_root}/builds.96boards.org/releases/hikey/linaro/debian/15.11"
debian_version="20151130-387-4g"

boot_image="${debian_path}/boot-fat.uefi.img"
system_image="${debian_path}/hikey-jessie_developer_${debian_version}.emmc.img"

die() {
	echo "(${1}) ERROR: command failed"
	exit 1
}

check_device() {
	if [[ ! -a ${device} ]]; then
		echo "ERROR: Serial device ${device} not found!"
		exit 1
	fi
}

jumpers_flash() {
	echo "set jumper AUTO PWR - 1-2 - on"
	echo "set jumper BOOT SEL - 3-4 - on"
	echo "set jumper GPIO3 1  - 5-6 - off"
}

jumpers_fastboot() {
	echo "set jumper AUTO PWR - 1-2 - on"
	echo "set jumper BOOT SEL - 3-4 - off"
	echo "set jumper GPIO3 1  - 5-6 - on"
}

jumpers_boot() {
	echo "set jumper AUTO PWR - 1-2 - on"
	echo "set jumper BOOT SEL - 3-4 - off"
	echo "set jumper GPIO3 1  - 5-6 - off"
}

usage() {
	echo "program-hikey" >&2
	echo "OPTIONS" >&2
	echo "     -b, --boot" >&2
	echo "             Program the eMMC boot partition (boot)." >&2
	echo "     -f, --firmware" >&2
	echo "             Program the eMMC firmware partitions (ptable, fastboot, nvme, mcuimage)." >&2
	echo "     -h, --help" >&2
	echo "             Print a help message." >&2
	echo "     -s, --system" >&2
	echo "             Program the eMMC system partition (system)." >&2
	echo "HINT" >&2
	echo "     wget -e robots=off --recursive --page-requisites --convert-links --no-parent \\" >&2
	echo "     'https://builds.96boards.org/releases/hikey/linaro/binaries/...'" >&2

	exit 1
}

if [[ $# -eq 0 ]]; then
	usage
fi

fw="n"
boot="n"
system="n"

while [[ $# -gt 0 ]]; do
	case "$1" in
	-b | --boot)
		boot="y"
		;;
	-f | --firmware)
		fw="y"
		;;
	-s | --system)
		system="y"
		;;
	*)
		usage
		;;
	esac
	shift
done

if [[ ${fw} == "y" ]]; then
	jumpers_flash
	echo "Writing firmware from '${uefi_path}'"
	check_device
	sudo python ${uefi_path}/hisi-idt.py -d ${device} --img1="${uefi_path}/l-loader.bin" || die $LINENO
	sleep 2
	sudo fastboot flash ptable "${uefi_path}/ptable-linux-4g.img" || die $LINENO
	sudo fastboot flash fastboot "${uefi_path}/fip.bin" || die $LINENO
	sudo fastboot flash nvme "${uefi_path}/nvme.img" || die $LINENO
fi

if [[ "${boot}" == "y" ]]; then
	[[ ${fw} == "y" ]] || jumpers_fastboot
	echo "Writing boot image '${boot_image}'"
	sudo fastboot flash boot ${boot_image} || die $LINENO
fi

if [[ "${system}" == "y" ]]; then
	[[ ${fw} == "y"  || "${boot}" == "y" ]] || jumpers_fastboot
	echo "Writing system image ${system_image}"
	sudo fastboot flash system "${system_image}" || die $LINENO
fi

sudo fastboot reboot

jumpers_boot